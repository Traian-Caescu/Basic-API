openapi: "3.1.2"

info:
  title: Demo Web Service API 
  version: '1.0.0'
  description: 'This web service provides various examples to follow various route types and the associated Swagger documentation'
  contact:
    email: me@here.com
    name: Tony Nicol
     
servers:
  - url: http://localhost:3000
  - url: https://prod.com 

paths:
  /:
    get:
      summary: Demo to return a string for the default path
      tags:
        - general # use tags for grouping in the documentation
      responses:
        "200":
          description: OK
          content: 
            text/plain:
              schema:
                type: string
                example: App is alive or similar

  /error:
    get:
      summary: Illustrates returning an error code
      tags:
        - general
      responses:
        "404": 
          description: Not Found

  /people/{role}:
    get:
      summary: Get all people with the specified role
      tags:
        - people
      parameters:   # Note: a parameter must contain either content or schema - not both
        - in: path  # this would be - in: query if using query string in get
          name: role
          schema:
            type: string
            enum:        # List all possible parameter values
            - students
            - academics
            - support 
          required: true
          description: Type of role to search and return
          
      responses:
        "200":
          description: OK
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                ['Str', 'Str', '...']
        "404":
          description: Not Found

  # You may have repetition so you can define reuse with $ref
  /people:
    get:
      summary: get all people regardless of role
      tags:
        - people
      responses:
        "200":
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/peopleObjProps' # enable ref multiple times
              example:
                {
                  role1: ['Str', 'Str', '...'],
                  roleN: ['Str', 'Str', '...'],
                }  

  /person:
     post:
       summary: Post first name last name and age to get a random age returned
       tags:
        - people
       requestBody:
         required: true
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/person'
           multipart/form-data:
             schema:
               $ref: '#/components/schemas/person'
           application/x-www-form-urlencoded:
             schema:
               $ref: '#/components/schemas/person'
       responses:
         200:
           description: |
             A message string describing a person who is
             65 years or older or a description of a person
             younger than 65. 

components:
  schemas:
    peopleObjProps:
      type: object
      properties:
        academics:
          type: array
          items: 
            type: string
        students:
          type: array
          items: 
            type: string
        support:
          type: array
          items: 
            type: string
  
    person:
        type: object
        properties:
          f_name:
            type: string
            description: Person's first name
            example: John
   
          l_name:
            type: string
            description: Person's last name
            example: Doe
   
          age:
            type: integer
            description: Person's age
            example: 25
   
        required:
          - f_name
          - l_name
          - age
      
    
  